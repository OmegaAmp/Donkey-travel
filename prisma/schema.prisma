datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Tracker {
  id        Int       @id @default(autoincrement())
  pinCode   Int
  lat       Float
  lon       Float
  time      DateTime  @default(now())
  tochten   Tocht[]
  boekingen Boeking[]
}

model Tocht {
  id           Int       @id @default(autoincrement())
  omschrijving String // 40
  route        String // 50
  aantalDagen  Int
  trackers     Tracker[]
}

model Herberg {
  id             Int            @id @default(autoincrement())
  naam           String // 50
  adres          String // 50
  email          String // 100
  telefoon       String // 20
  coordinaten    String // 20
  gewijzigd      DateTime       @updatedAt
  overnachtingen Overnachting[]
}

model Overnachting {
  id            Int     @id @default(autoincrement())
  fkBoekingenId Int
  fkHerbergenId Int
  fkStatussenId Int
  herberg       Herberg @relation(fields: [fkHerbergenId], references: [id])
  status        Status  @relation(fields: [fkStatussenId], references: [id])
}

model Boeking {
  id            Int           @id @default(autoincrement())
  startDatum    DateTime      @default(now())
  pinCode       Int
  fkTochtenId   Int
  fkKlantenId   Int
  fkStatussenId Int
  tocht         Tracker       @relation(fields: [fkTochtenId], references: [id])
  status        Status        @relation(fields: [fkStatussenId], references: [id])
  pauzePlaatsen PauzePlaats[]
}

model Restaurant {
  id            Int           @id @default(autoincrement())
  naam          String
  adres         String
  email         String
  telefoon      String // 20
  coordinaten   String
  gewijzigd     DateTime      @updatedAt
  pauzePlaatsen PauzePlaats[]
  status        Status?       @relation(fields: [statussenId], references: [id])
  statussenId   Int?
}

model Status {
  id             Int            @id @default(autoincrement())
  statusCode     Int
  status         String // 40
  verwijderbaar  Int
  pinToekennen   Int
  boekingen      Boeking[]
  restaurants    Restaurant[]
  pauzePlaatsen  PauzePlaats[]
  overnachtingen Overnachting[]
}

model PauzePlaats {
  id              Int        @id @default(autoincrement())
  fkBoekingenId   Int
  fkRestaurantsId Int
  fkStatussenId   Int
  boeking         Boeking    @relation(fields: [fkBoekingenId], references: [id])
  restaurant      Restaurant @relation(fields: [fkRestaurantsId], references: [id])
  status          Status     @relation(fields: [fkStatussenId], references: [id])
}

model Klant {
  id         Int      @id @default(autoincrement())
  naam       String
  email      String
  telefoon   String
  wachtwoord String
  gewijzigd  DateTime @updatedAt
}
